{"version":3,"sources":["theme/palette.js","theme/typography.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiTableCell.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","hooks/useRouter.ts","components/Header/Header.tsx","graphql/generated/graphql.tsx","components/Flag/Flag.tsx","components/LanguagesTable/LanguagesTable.tsx","components/TranslationsTable/TranslationsTable.tsx","views/Languages/Languages.tsx","layouts/Main/components/Footer/Footer.tsx","layouts/Main/Main.tsx","App.tsx","index.tsx"],"names":["white","palette","black","primary","contrastText","main","secondary","dark","colors","red","light","success","green","info","blue","warning","orange","error","text","blueGrey","link","background","default","paper","icon","divider","grey","typography","h1","color","fontWeight","fontSize","letterSpacing","lineHeight","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","textTransform","MuiIconButton","root","&:hover","backgroundColor","overrides","MuiButton","contained","boxShadow","MuiPaper","elevation1","MuiTableCell","_objectSpread","borderBottom","concat","MuiTableHead","MuiTypography","gutterBottom","marginBottom","theme","createMuiTheme","zIndex","appBar","drawer","useRouter","useContext","__RouterContext","useStyles","makeStyles","createStyles","Header","_ref","className","rest","Object","objectWithoutProperties","classes","react_default","a","createElement","assign","clsx","Grid","container","direction","spacing","justify","alignItems","item","Typography","component","variant","Button","UpdateTranslationDocument","gql","_templateObject","ResetTranaslationDocument","_templateObject2","TranslationsDocument","_templateObject3","LanguagesDocument","_templateObject4","flagIcon","marginRight","& img","margin","Flag","languageKey","flags","id","locale","lib","onlyEmojiClassName","filter","flag","map","handleFlag","chip","nameContainer","display","avatar","progress","width","height","progressContainer","justifyContent","progressLabel","whiteSpace","LanguagesTable","baseOptions","_useLanguagesQuery","ApolloReactHooks","loading","data","_useState","useState","_useState2","slicedToArray","tableData","setTableData","useEffect","languages","dist_default","title","columns","field","render","rowData","components_Flag_Flag","languageName","toUpperCase","sorting","Chip","size","isActive","label","isDefault","clickable","deleteIcon","Done_default","onDelete","hidden","headerStyle","textAlign","align","CircularProgress","value","cellStyle","RouterLink","to","isLoading","actions","tooltip","isFreeAction","onClick","event","alert","components","Toolbar","props","dist","Divider","options","search","showTitle","pageSize","pageSizeOptions","& .MuiTableSortLabel-icon","formControl","minWidth","selectEmpty","& .selectLanguage","position","marginTop","& .MuiSelect-selectMenu","selectFlag","editField","TranslationsTable","router","match","params","setLanguageKey","_useState3","_useState4","_useState5","_useState6","tableLoading","setTableLoading","_useTranslationsQuery","variables","translations","_useUpdateTranslation","useUpdateTranslationMutation","updateTranslation","_useResetTranaslation","useResetTranaslationMutation","resetTranslation","handleSelectChange","React","useCallback","history","push","target","FormControl","Select","onChange","displayEmpty","name","MenuItem","editable","onRowAdd","newData","Promise","resolve","update","proxy","mutationResult","toConsumableArray","resultData","indexOf","onRowDelete","oldData","onRowUpdate","EditField","icons","Add","forwardRef","ref","esm_Add","Delete","Undo","localization","body","addTooltip","deleteTooltip","editTooltip","editRow","deleteText","emptyDataSourceMessage","actionsColumnIndex","length","searchFieldStyle","addRowPosition","padding","tabs","content","Languages","tab","components_Header_Header","Tabs","scrollButtons","Tab","key","components_LanguagesTable_LanguagesTable","components_TranslationsTable_TranslationsTable","Footer","Link","href","Icon","defineProperty","paddingTop","breakpoints","up","fab","bottom","right","menuItem","openInNewIcon","marginLeft","Main","fabRef","useRef","setOpen","react_router_dom","basename","Fab","aria-label","Add_default","react_router","exact","from","path","components_Footer_Footer","App","ThemeProvider","layouts_Main_Main","cache","InMemoryCache","HttpLink","uri","process","headers","Authorization","window","token","client","ApolloClient","ReactDOM","react_common_esm","ApolloContext","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.18aa35bc.chunk.js","sourcesContent":["import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  primary: {\n    contrastText: white,\n    main: '#c02124',\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[100]\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import { useContext } from 'react';\nimport { __RouterContext, RouteComponentProps } from 'react-router';\n\nexport default function useRouter<TParams = {}>() {\n  return useContext(__RouterContext) as RouteComponentProps<TParams>;\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Button, Grid, Typography } from '@material-ui/core';\n\ninterface Props {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {}\n  }));\n\nconst Header: React.FC<Props> = ({ className, ...rest }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        container\n        direction=\"row\"\n        spacing={3}\n        justify=\"space-between\"\n        alignItems=\"flex-end\"\n      >\n        <Grid\n          item\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Master Settings\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Languages\n          </Typography>\n        </Grid>\n        <Grid\n          item\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n          >\n            Add language\n            </Button>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Header;\n","import gql from 'graphql-tag';\nimport * as ApolloReactCommon from '@apollo/react-common';\nimport * as React from 'react';\nimport * as ApolloReactComponents from '@apollo/react-components';\nimport * as ApolloReactHoc from '@apollo/react-hoc';\nimport * as ApolloReactHooks from '@apollo/react-hooks';\nexport type Maybe<T> = T | null;\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\n/** An type for address data */\nexport type Address = {\n  __typename?: 'Address';\n  street?: Maybe<Scalars['String']>;\n  streetnr?: Maybe<Scalars['String']>;\n  additionalinfo?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  zip?: Maybe<Scalars['String']>;\n  countryshortcut?: Maybe<Scalars['String']>;\n};\n\n/** An type for address data */\nexport type Addressinput = {\n  street?: Maybe<Scalars['String']>;\n  streetnr?: Maybe<Scalars['String']>;\n  additionalinfo?: Maybe<Scalars['String']>;\n  city?: Maybe<Scalars['String']>;\n  zip?: Maybe<Scalars['String']>;\n  countryshortcut?: Maybe<Scalars['String']>;\n};\n\n/** A language object existing in the shop */\nexport type Language = {\n  __typename?: 'Language';\n  languageKey: Scalars['ID'];\n  languageName?: Maybe<Scalars['String']>;\n  isActive?: Maybe<Scalars['Boolean']>;\n  isDefault?: Maybe<Scalars['Boolean']>;\n};\n\n/** Get / update authentification token */\nexport type Login = {\n  __typename?: 'Login';\n  token?: Maybe<Scalars['String']>;\n};\n\n/** The base mutation type */\nexport type Mutation = {\n  __typename?: 'mutation';\n  /** Creates a new user object in the database. */\n  createUser?: Maybe<User>;\n  /** Updates an existing user object in the database. */\n  updateUser?: Maybe<User>;\n  /** update translation object */\n  updateTranslation?: Maybe<Translation>;\n  /** Danger! Reset specific changed translation for the language. */\n  resetTranslation?: Maybe<Translation>;\n  /** Danger! Delete all changed translations for the language. */\n  resetTranslations?: Maybe<Scalars['String']>;\n};\n\n/** The base mutation type */\nexport type MutationCreateUserArgs = {\n  user?: Maybe<Usercreateinput>;\n};\n\n/** The base mutation type */\nexport type MutationUpdateUserArgs = {\n  user?: Maybe<Userupdateinput>;\n};\n\n/** The base mutation type */\nexport type MutationUpdateTranslationArgs = {\n  languageKey: Scalars['ID'];\n  translationKey: Scalars['ID'];\n  translationValue: Scalars['String'];\n};\n\n/** The base mutation type */\nexport type MutationResetTranslationArgs = {\n  languageKey: Scalars['ID'];\n  translationKey: Scalars['ID'];\n};\n\n/** The base mutation type */\nexport type MutationResetTranslationsArgs = {\n  languageKey: Scalars['ID'];\n};\n\n/** The base query type */\nexport type Query = {\n  __typename?: 'query';\n  /** Returns a jason web token according to the provide credentials. If no\n   * credentials are given, a token for anonymous login is returned.\n   */\n  login?: Maybe<Login>;\n  /** Changes the language in the current auth token, signs it again and returns the changed token. */\n  setlanguage?: Maybe<Login>;\n  /** Get a user object. If no parameter is given, get self. */\n  user?: Maybe<User>;\n  /** Get a specific shop language object. */\n  language?: Maybe<Language>;\n  /** Get a list of languages. */\n  languages?: Maybe<Array<Maybe<Language>>>;\n  /** Get a list of translations. */\n  translations?: Maybe<Array<Maybe<Translation>>>;\n  /** Get a specific translation for a language */\n  translation?: Maybe<Translation>;\n};\n\n/** The base query type */\nexport type QueryLoginArgs = {\n  username?: Maybe<Scalars['String']>;\n  password?: Maybe<Scalars['String']>;\n  lang?: Maybe<Scalars['String']>;\n  shopid?: Maybe<Scalars['Int']>;\n};\n\n/** The base query type */\nexport type QuerySetlanguageArgs = {\n  lang: Scalars['String'];\n};\n\n/** The base query type */\nexport type QueryUserArgs = {\n  userid?: Maybe<Scalars['String']>;\n};\n\n/** The base query type */\nexport type QueryLanguageArgs = {\n  languageKey: Scalars['ID'];\n};\n\n/** The base query type */\nexport type QueryTranslationsArgs = {\n  languageKey: Scalars['ID'];\n};\n\n/** The base query type */\nexport type QueryTranslationArgs = {\n  languageKey: Scalars['ID'];\n  translationKey: Scalars['ID'];\n};\n\n/** Translation existing in the shop */\nexport type Translation = {\n  __typename?: 'Translation';\n  languageKey: Scalars['ID'];\n  translationKey: Scalars['ID'];\n  translationValue: Scalars['String'];\n};\n\n/** Rudimentary user object */\nexport type User = {\n  __typename?: 'User';\n  username?: Maybe<Scalars['String']>;\n  firstname?: Maybe<Scalars['String']>;\n  lastname?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['String']>;\n  address?: Maybe<Address>;\n};\n\n/** An type for address data */\nexport type Usercreateinput = {\n  username: Scalars['String'];\n  password: Scalars['String'];\n  firstname?: Maybe<Scalars['String']>;\n  lastname?: Maybe<Scalars['String']>;\n  address?: Maybe<Addressinput>;\n  usergroup: Scalars['String'];\n  shopid?: Maybe<Scalars['Int']>;\n};\n\n/** An type for address data */\nexport type Userupdateinput = {\n  password?: Maybe<Scalars['String']>;\n  firstname?: Maybe<Scalars['String']>;\n  lastname?: Maybe<Scalars['String']>;\n  id: Scalars['String'];\n  address?: Maybe<Addressinput>;\n};\nexport type UpdateTranslationMutationVariables = {\n  languageKey: Scalars['ID'];\n  translationKey: Scalars['ID'];\n  translationValue: Scalars['String'];\n};\n\nexport type UpdateTranslationMutation = { __typename?: 'mutation' } & {\n  updateTranslation: Maybe<\n    { __typename?: 'Translation' } & Pick<\n      Translation,\n      'languageKey' | 'translationKey' | 'translationValue'\n    >\n  >;\n};\n\nexport type ResetTranaslationMutationVariables = {\n  languageKey: Scalars['ID'];\n  translationKey: Scalars['ID'];\n};\n\nexport type ResetTranaslationMutation = { __typename?: 'mutation' } & {\n  resetTranslation: Maybe<\n    { __typename?: 'Translation' } & Pick<\n      Translation,\n      'languageKey' | 'translationKey' | 'translationValue'\n    >\n  >;\n};\n\nexport type TranslationsQueryVariables = {\n  languageKey: Scalars['ID'];\n};\n\nexport type TranslationsQuery = { __typename?: 'query' } & {\n  translations: Maybe<\n    Array<\n      Maybe<\n        { __typename?: 'Translation' } & Pick<\n          Translation,\n          'languageKey' | 'translationKey' | 'translationValue'\n        >\n      >\n    >\n  >;\n};\n\nexport type LanguagesQueryVariables = {};\n\nexport type LanguagesQuery = { __typename?: 'query' } & {\n  languages: Maybe<\n    Array<\n      Maybe<\n        { __typename?: 'Language' } & Pick<\n          Language,\n          'isActive' | 'isDefault' | 'languageName' | 'languageKey'\n        >\n      >\n    >\n  >;\n};\n\nexport const UpdateTranslationDocument = gql`\n  mutation UpdateTranslation($languageKey: ID!, $translationKey: ID!, $translationValue: String!) {\n    updateTranslation(\n      languageKey: $languageKey\n      translationKey: $translationKey\n      translationValue: $translationValue\n    ) {\n      languageKey\n      translationKey\n      translationValue\n    }\n  }\n`;\nexport type UpdateTranslationMutationFn = ApolloReactCommon.MutationFunction<\n  UpdateTranslationMutation,\n  UpdateTranslationMutationVariables\n>;\nexport type UpdateTranslationComponentProps = Omit<\n  ApolloReactComponents.MutationComponentOptions<\n    UpdateTranslationMutation,\n    UpdateTranslationMutationVariables\n  >,\n  'mutation'\n>;\n\nexport const UpdateTranslationComponent = (props: UpdateTranslationComponentProps) => (\n  <ApolloReactComponents.Mutation<UpdateTranslationMutation, UpdateTranslationMutationVariables>\n    mutation={UpdateTranslationDocument}\n    {...props}\n  />\n);\n\nexport type UpdateTranslationProps<TChildProps = {}> = ApolloReactHoc.MutateProps<\n  UpdateTranslationMutation,\n  UpdateTranslationMutationVariables\n> &\n  TChildProps;\nexport function withUpdateTranslation<TProps, TChildProps = {}>(\n  operationOptions?: ApolloReactHoc.OperationOption<\n    TProps,\n    UpdateTranslationMutation,\n    UpdateTranslationMutationVariables,\n    UpdateTranslationProps<TChildProps>\n  >\n) {\n  return ApolloReactHoc.withMutation<\n    TProps,\n    UpdateTranslationMutation,\n    UpdateTranslationMutationVariables,\n    UpdateTranslationProps<TChildProps>\n  >(UpdateTranslationDocument, {\n    alias: 'withUpdateTranslation',\n    ...operationOptions\n  });\n}\n\nexport function useUpdateTranslationMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    UpdateTranslationMutation,\n    UpdateTranslationMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    UpdateTranslationMutation,\n    UpdateTranslationMutationVariables\n  >(UpdateTranslationDocument, baseOptions);\n}\nexport type UpdateTranslationMutationHookResult = ReturnType<typeof useUpdateTranslationMutation>;\nexport type UpdateTranslationMutationResult = ApolloReactCommon.MutationResult<\n  UpdateTranslationMutation\n>;\nexport type UpdateTranslationMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  UpdateTranslationMutation,\n  UpdateTranslationMutationVariables\n>;\nexport const ResetTranaslationDocument = gql`\n  mutation ResetTranaslation($languageKey: ID!, $translationKey: ID!) {\n    resetTranslation(languageKey: $languageKey, translationKey: $translationKey) {\n      languageKey\n      translationKey\n      translationValue\n    }\n  }\n`;\nexport type ResetTranaslationMutationFn = ApolloReactCommon.MutationFunction<\n  ResetTranaslationMutation,\n  ResetTranaslationMutationVariables\n>;\nexport type ResetTranaslationComponentProps = Omit<\n  ApolloReactComponents.MutationComponentOptions<\n    ResetTranaslationMutation,\n    ResetTranaslationMutationVariables\n  >,\n  'mutation'\n>;\n\nexport const ResetTranaslationComponent = (props: ResetTranaslationComponentProps) => (\n  <ApolloReactComponents.Mutation<ResetTranaslationMutation, ResetTranaslationMutationVariables>\n    mutation={ResetTranaslationDocument}\n    {...props}\n  />\n);\n\nexport type ResetTranaslationProps<TChildProps = {}> = ApolloReactHoc.MutateProps<\n  ResetTranaslationMutation,\n  ResetTranaslationMutationVariables\n> &\n  TChildProps;\nexport function withResetTranaslation<TProps, TChildProps = {}>(\n  operationOptions?: ApolloReactHoc.OperationOption<\n    TProps,\n    ResetTranaslationMutation,\n    ResetTranaslationMutationVariables,\n    ResetTranaslationProps<TChildProps>\n  >\n) {\n  return ApolloReactHoc.withMutation<\n    TProps,\n    ResetTranaslationMutation,\n    ResetTranaslationMutationVariables,\n    ResetTranaslationProps<TChildProps>\n  >(ResetTranaslationDocument, {\n    alias: 'withResetTranaslation',\n    ...operationOptions\n  });\n}\n\nexport function useResetTranaslationMutation(\n  baseOptions?: ApolloReactHooks.MutationHookOptions<\n    ResetTranaslationMutation,\n    ResetTranaslationMutationVariables\n  >\n) {\n  return ApolloReactHooks.useMutation<\n    ResetTranaslationMutation,\n    ResetTranaslationMutationVariables\n  >(ResetTranaslationDocument, baseOptions);\n}\nexport type ResetTranaslationMutationHookResult = ReturnType<typeof useResetTranaslationMutation>;\nexport type ResetTranaslationMutationResult = ApolloReactCommon.MutationResult<\n  ResetTranaslationMutation\n>;\nexport type ResetTranaslationMutationOptions = ApolloReactCommon.BaseMutationOptions<\n  ResetTranaslationMutation,\n  ResetTranaslationMutationVariables\n>;\nexport const TranslationsDocument = gql`\n  query Translations($languageKey: ID!) {\n    translations(languageKey: $languageKey) {\n      languageKey\n      translationKey\n      translationValue\n    }\n  }\n`;\nexport type TranslationsComponentProps = Omit<\n  ApolloReactComponents.QueryComponentOptions<TranslationsQuery, TranslationsQueryVariables>,\n  'query'\n> &\n  ({ variables: TranslationsQueryVariables; skip?: boolean } | { skip: boolean });\n\nexport const TranslationsComponent = (props: TranslationsComponentProps) => (\n  <ApolloReactComponents.Query<TranslationsQuery, TranslationsQueryVariables>\n    query={TranslationsDocument}\n    {...props}\n  />\n);\n\nexport type TranslationsProps<TChildProps = {}> = ApolloReactHoc.DataProps<\n  TranslationsQuery,\n  TranslationsQueryVariables\n> &\n  TChildProps;\nexport function withTranslations<TProps, TChildProps = {}>(\n  operationOptions?: ApolloReactHoc.OperationOption<\n    TProps,\n    TranslationsQuery,\n    TranslationsQueryVariables,\n    TranslationsProps<TChildProps>\n  >\n) {\n  return ApolloReactHoc.withQuery<\n    TProps,\n    TranslationsQuery,\n    TranslationsQueryVariables,\n    TranslationsProps<TChildProps>\n  >(TranslationsDocument, {\n    alias: 'withTranslations',\n    ...operationOptions\n  });\n}\n\nexport function useTranslationsQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<TranslationsQuery, TranslationsQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<TranslationsQuery, TranslationsQueryVariables>(\n    TranslationsDocument,\n    baseOptions\n  );\n}\nexport type TranslationsQueryHookResult = ReturnType<typeof useTranslationsQuery>;\nexport type TranslationsQueryResult = ApolloReactCommon.QueryResult<\n  TranslationsQuery,\n  TranslationsQueryVariables\n>;\nexport const LanguagesDocument = gql`\n  query Languages {\n    languages {\n      isActive\n      isDefault\n      languageName\n      languageKey\n    }\n  }\n`;\nexport type LanguagesComponentProps = Omit<\n  ApolloReactComponents.QueryComponentOptions<LanguagesQuery, LanguagesQueryVariables>,\n  'query'\n>;\n\nexport const LanguagesComponent = (props: LanguagesComponentProps) => (\n  <ApolloReactComponents.Query<LanguagesQuery, LanguagesQueryVariables>\n    query={LanguagesDocument}\n    {...props}\n  />\n);\n\nexport type LanguagesProps<TChildProps = {}> = ApolloReactHoc.DataProps<\n  LanguagesQuery,\n  LanguagesQueryVariables\n> &\n  TChildProps;\nexport function withLanguages<TProps, TChildProps = {}>(\n  operationOptions?: ApolloReactHoc.OperationOption<\n    TProps,\n    LanguagesQuery,\n    LanguagesQueryVariables,\n    LanguagesProps<TChildProps>\n  >\n) {\n  return ApolloReactHoc.withQuery<\n    TProps,\n    LanguagesQuery,\n    LanguagesQueryVariables,\n    LanguagesProps<TChildProps>\n  >(LanguagesDocument, {\n    alias: 'withLanguages',\n    ...operationOptions\n  });\n}\n\nexport function useLanguagesQuery(\n  baseOptions?: ApolloReactHooks.QueryHookOptions<LanguagesQuery, LanguagesQueryVariables>\n) {\n  return ApolloReactHooks.useQuery<LanguagesQuery, LanguagesQueryVariables>(\n    LanguagesDocument,\n    baseOptions\n  );\n}\nexport type LanguagesQueryHookResult = ReturnType<typeof useLanguagesQuery>;\nexport type LanguagesQueryResult = ApolloReactCommon.QueryResult<\n  LanguagesQuery,\n  LanguagesQueryVariables\n>;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Emojione } from 'react-emoji-render';\n\ninterface Props {\n  languageKey: string;\n  className?: string;\n}\n\ninterface Flag {\n  id: string;\n  locale: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {},\n    flagIcon: {\n      fontSize: '42px',\n      marginRight: theme.spacing(2),\n      '& img': {\n        margin: '0px !important',\n      }\n    },\n  }));\n\nconst Flag: React.FC<Props> = ({ languageKey, className, ...rest }: Props) => {\n  const classes = useStyles();\n  const flags = [\n    {\n      id: 'en',\n      locale: 'gb'\n    },\n    {\n      id: 'de',\n      locale: 'de'\n    },\n    {\n      id: 'es',\n      locale: 'es'\n    }\n  ];\n  const handleFlag = (languageKey: string) => {\n    const flag: string[] = flags\n      .filter((flag: Flag) => flag.id === languageKey)\n      .map((flag: Flag) => flag.locale);\n    return flag[0];\n  };\n  return (\n    <Emojione\n      onlyEmojiClassName={clsx(className, classes.flagIcon)}\n      text={`:${handleFlag(languageKey)}:`}\n      {...rest}\n    />\n  );\n};\n\nexport default Flag;\n","import { Button, Chip, CircularProgress, colors, Divider, Typography } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport DoneIcon from '@material-ui/icons/Done';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { LanguagesQuery, useLanguagesQuery } from '../../graphql/generated/graphql';\nimport Flag from '../Flag';\n\ninterface Props {\n  className?: string;\n}\n\nexport interface State {\n  data: LanguagesQuery[],\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n    },\n    chip: {\n      margin: theme.spacing(0.25),\n    },\n    nameContainer: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n    avatar: {\n      marginRight: theme.spacing(2)\n    },\n    progress: {\n      width: '56px',\n      height: '56px'\n    },\n    progressContainer: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      marginBottom: theme.spacing(1)\n    },\n    progressLabel: {\n      whiteSpace: 'nowrap',\n      marginRight: theme.spacing(1)\n    }\n  }));\n\n\nconst LanguagesTable: React.FC<Props> = ({ className }) => {\n  const classes = useStyles();\n  const { loading, data } = useLanguagesQuery();\n  const [tableData, setTableData] = useState();\n\n  useEffect(() => {\n    if (!loading && data) {\n      setTableData(data.languages);\n    }\n  }, [data, loading]);\n\n  return (\n    <div className={classes.root} >\n      <MaterialTable\n        title={\n          <Typography variant=\"h5\" component=\"span\">All Languages</Typography>\n        }\n        columns={\n          [\n            {\n              title: 'Name',\n              field: 'languageName',\n              render: rowData => (\n                <div className={classes.nameContainer}>\n                  <Flag languageKey={rowData.languageKey} />\n                  <Typography variant=\"body1\">{rowData.languageName}</Typography>\n                </div>\n              )\n            },\n            {\n              title: 'Locle',\n              field: 'languageKey',\n              render: rowData => `${rowData.languageKey}-${rowData.languageKey!.toUpperCase()}`\n            },\n            {\n              title: 'Status',\n              field: 'isActive',\n              sorting: false,\n              render: rowData => (\n                <div>\n\n                  <Chip size=\"small\" color={rowData.isActive ? 'secondary' : 'default'} variant=\"outlined\"\n                    label=\"Active\" className={classes.chip} />\n                  {rowData.isDefault &&\n                    <Chip size=\"small\" color={rowData.isDefault ? 'secondary' : 'default'} variant=\"default\" clickable={false}\n                      label=\"Default\" className={classes.chip} deleteIcon={<DoneIcon />} onDelete={() => (null)} />}\n                </div>\n              )\n            },\n            {\n              field: 'isDefault',\n              hidden: true\n            },\n            {\n              title: 'Translations',\n              headerStyle: {\n                textAlign: 'right'\n              },\n              sorting: false,\n              render: rowData => (\n                <div className={classes.progressContainer}>\n                  <div className={classes.progressLabel}>\n                    <Typography variant=\"h6\" align=\"right\">\n                      99%\n                    </Typography>\n                    <Typography variant=\"body1\" align=\"right\">\n                      Translation Rate\n                    </Typography>\n                  </div>\n                  <CircularProgress className={classes.progress} variant=\"static\" color=\"secondary\" value={99} />\n                </div>\n              )\n            },\n            {\n              title: 'Actions',\n              headerStyle: {\n                textAlign: 'right'\n              },\n              cellStyle: {\n                textAlign: 'right'\n              },\n              sorting: false,\n              render: rowData => (\n                <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={`/translations/${rowData.languageKey}`}\n                  variant=\"outlined\"\n                >\n                  Edit Translations\n                </Button>\n              )\n            }\n          ]\n        }\n        isLoading={loading}\n        data={tableData}\n        actions={[\n          {\n            icon: 'more_vert',\n            tooltip: 'More actions',\n            isFreeAction: true,\n            onClick: (event) => alert(\"More...\")\n          }\n        ]}\n        components={{\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <Divider />\n            </div>\n          ),\n        }}\n        options={{\n          search: false,\n          showTitle: true,\n          pageSize: 5,\n          pageSizeOptions: [5, 10, 30],\n          headerStyle: {\n            backgroundColor: colors.grey[50]\n          }\n        }}\n      />\n    </div >\n  );\n};\n\nexport default LanguagesTable;\n","import React, { useState, useEffect, forwardRef } from 'react';\nimport { useTranslationsQuery, useUpdateTranslationMutation, useResetTranaslationMutation } from '../../graphql/generated/graphql';\nimport { useRouter } from '../../hooks';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport MaterialTable, { MTableToolbar, MTableEditField } from 'material-table';\nimport { MenuItem, FormControl, Select, Divider, colors, Typography } from '@material-ui/core';\nimport Flag from '../Flag'\nimport { Undo, Add } from '@material-ui/icons';\n\ninterface Props {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTableSortLabel-icon': {\n        fontSize: '1rem',\n        width: '1em',\n        height: '1em'\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 140,\n      alignItems: 'center',\n    },\n    selectEmpty: {\n      width: '280px',\n      '& .selectLanguage': {\n        position: 'absolute',\n        marginTop: '1em'\n      },\n      '& .MuiSelect-selectMenu': {\n        height: '3em',\n      }\n    },\n    selectFlag: {\n      lineHeight: '1.3 !important',\n    },\n    editField: {\n      width: '100%'\n    }\n  }));\n\nconst TranslationsTable: React.FC<Props> = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const router = useRouter<{ id: string }>();\n  const { match: { params: { id } } } = router;\n\n  const [languageKey, setLanguageKey] = useState(id ? id : '');\n  const [tableData, setTableData] = useState();\n  const [tableLoading, setTableLoading] = useState();\n\n  const { loading, error, data } = useTranslationsQuery({\n    variables: { languageKey }\n  });\n\n  useEffect(() => {\n    if (loading) {\n      setTableLoading(loading)\n    }\n    if (data) {\n      setTableLoading(loading)\n      setTableData(data.translations);\n    }\n    if (error) {\n      setTableData([]);\n    }\n  }, [data, error, loading]);\n\n  const [updateTranslation] = useUpdateTranslationMutation();\n  const [resetTranslation] = useResetTranaslationMutation();\n\n  const handleSelectChange = React.useCallback((\n    event: React.ChangeEvent<{ name?: string; value: unknown }>\n  ) => {\n    router.history.push(`/translations/${event.target.value}`);\n    setLanguageKey(event.target.value as string);\n  }, [router.history]);\n\n  return (\n    <div className={classes.root}>\n      <MaterialTable\n        title={\n          <FormControl className={classes.formControl}>\n            <Select\n              value={languageKey}\n              onChange={handleSelectChange}\n              displayEmpty\n              name=\"language\"\n              className={classes.selectEmpty}\n            >\n              <MenuItem value={''}>\n                <Typography variant={'subtitle1'} className='selectLanguage'>Select a language</Typography>\n              </MenuItem>\n              <MenuItem value={'de'}>\n                <Flag languageKey={'de'} className={classes.selectFlag} />\n                <span className='selectLanguage'>Deutsch</span>\n              </MenuItem>\n              <MenuItem value={'en'}>\n                <Flag languageKey={'en'} className={classes.selectFlag} />\n                <span className='selectLanguage'>English</span>\n              </MenuItem>\n            </Select>\n          </FormControl>\n        }\n        columns={[\n          {\n            title: 'Field',\n            field: 'translationKey',\n            editable: 'onAdd',\n          },\n          {\n            title: 'Translation',\n            field: 'translationValue',\n          },\n          {\n            title: 'Language',\n            field: 'languageKey',\n            hidden: true\n          }\n        ]}\n        isLoading={tableLoading}\n        data={tableData}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              updateTranslation({\n                update: (proxy, mutationResult) => {\n                  const data = [...tableData];\n                  const { data: resultData } = mutationResult;\n                  if (resultData && resultData.updateTranslation) {\n                    data[tableData.indexOf(newData)] = resultData.updateTranslation;\n                    resolve();\n                  }\n                },\n                variables: newData\n              })\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              const data = [...tableData];\n              data[tableData.indexOf(oldData)] = oldData;\n              setTableData(data);\n              resetTranslation({\n                update: (proxy, mutationResult) => {\n                  const { data: resultData } = mutationResult;\n                  if (resultData && resultData.resetTranslation) {\n                    data[tableData.indexOf(oldData)] = resultData.resetTranslation;\n                    setTableData(data);\n                    resolve();\n                  }\n                },\n                variables: oldData\n              })\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              updateTranslation({\n                update: (proxy, mutationResult) => {\n                  const data = [...tableData];\n                  const { data: resultData } = mutationResult;\n                  if (resultData && resultData.updateTranslation) {\n                    data[tableData.indexOf(oldData)] = resultData.updateTranslation;\n                    setTableData(data);\n                    resolve();\n                  }\n                },\n                variables: newData\n              })\n            }),\n        }}\n        components={{\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <Divider />\n            </div>\n          ),\n          EditField: props => (\n            <MTableEditField className={classes.editField} {...props} />\n          )\n        }}\n        icons={{\n          Add: forwardRef((props, ref) => <Add {...props} ref={ref} />),\n          Delete: forwardRef((props, ref) => <Undo {...props} ref={ref} />),\n        }}\n        localization={{\n          body: {\n            addTooltip: 'Add',\n            deleteTooltip: 'Reset',\n            editTooltip: 'Edit',\n            editRow: {\n              deleteText: 'Are you sure reset this row?'\n            },\n            emptyDataSourceMessage: 'No translations to display'\n          }\n        }}\n        options={{\n          search: true,\n          showTitle: true,\n          actionsColumnIndex: -1,\n          pageSize: tableData && tableData.length ? 10 : 5,\n          pageSizeOptions: [5, 10, 20, 50],\n          headerStyle: {\n            backgroundColor: colors.grey[50],\n          },\n          searchFieldStyle: {\n            height: '3.9em',\n          },\n          addRowPosition: 'first'\n        }}\n      />\n    </div>\n  )\n};\n\nexport default TranslationsTable;\n","import React from 'react';\nimport { useRouter } from '../../hooks';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\n\nimport { Header, LanguagesTable, TranslationsTable } from '../../components';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Languages = () => {\n  const classes = useStyles();\n\n  const router = useRouter<{ tab: string }>();\n  const { match: { params: { tab } } } = router;\n\n  const handleTabsChange = (\n    event: React.ChangeEvent<{}>,\n    tab: string) => {\n    router.history.push(`/${tab}`);\n  };\n\n  const tabs = [\n    { value: 'overview', label: 'Overview' },\n    { value: 'translations', label: 'Translations' }\n  ];\n\n  return (\n    <div className={classes.root}>\n      <Header />\n      <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n      <div className={classes.content}>\n        {tab === 'overview' && <LanguagesTable />}\n        {tab === 'translations' && <TranslationsTable />}\n      </div>\n    </div>\n  );\n};\n\nexport default Languages;\n","import { Link, Typography } from '@material-ui/core';\nimport Icon from '@material-ui/core/Icon';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport React from 'react';\n\ninterface Props {\n  className?: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(4),\n    },\n    icon: {\n      fontSize: '12px',\n      lineHeight: '17px'\n    }\n  }));\n\nconst Footer: React.FC<Props> = ({ className, ...rest }: Props) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography variant=\"body1\">\n        &copy;{' '}\n        <Link\n          component=\"a\"\n          href=\"http://oxidforge.org\"\n          target=\"_blank\"\n        >\n          Oxid eSales - Oxid Projects\n        </Link> 2019\n      </Typography>\n      <Typography variant=\"caption\">\n        Module Translations was <Icon className={classes.icon}>code</Icon> with <Icon className={classes.icon}>favorite</Icon> by\n        developers who <Icon className={classes.icon}>thumb_up</Icon> to work together with OXID!\n      </Typography>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { Fab } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AddIcon from '@material-ui/icons/Add';\nimport clsx from 'clsx';\nimport React, { useRef, useState } from 'react';\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom';\nimport Languages from '../../views/Languages';\nimport Footer from './components/Footer';\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      paddingTop: 0,\n      height: '100%',\n      [theme.breakpoints.up('sm')]: {\n        paddingTop: 8\n      }\n    },\n    content: {\n      height: '100%'\n    },\n    fab: {\n      position: 'fixed',\n      bottom: 24,\n      right: 24,\n      zIndex: theme.zIndex.appBar + 2\n    },\n    menuItem: {\n      justifyContent: 'space-between'\n    },\n    openInNewIcon: {\n      marginLeft: theme.spacing(2)\n    }\n  }),\n);\n\nconst Main: React.FC = () => {\n  const classes = useStyles();\n\n  const fabRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleMenuOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div\n      className={clsx({\n        [classes.root]: true,\n      })}\n    >\n      <main className={classes.content}>\n        <HashRouter basename=\"/languages\">\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.fab}\n            onClick={handleMenuOpen}\n            ref={fabRef}\n          >\n            <AddIcon />\n          </Fab>\n          <Switch>\n            <Redirect\n              exact\n              from=\"/\"\n              to=\"/overview\"\n            />\n            <Route\n              component={Languages}\n              exact\n              path=\"/:tab\"\n            />\n            <Route\n              component={Languages}\n              exact\n              path=\"/:tab/:id\"\n            />\n          </Switch>\n          <Footer />\n        </HashRouter>\n      </main>\n    </div >\n  );\n};\n\nexport default Main;\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/styles';\nimport theme from './theme';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport './assets/scss/index.scss';\n\nimport Main from './layouts/Main';\n\nconst App: React.FC = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <Main />\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","import { ApolloProvider } from '@apollo/react-hooks';\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink } from 'apollo-link-http';\nimport React from 'react';\nimport { ApolloProvider as ApolloHooksProvider } from 'react-apollo-hooks';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\ndeclare global {\n    interface Window { token: any; }\n}\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n    uri: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n    headers: { Authorization: `Bearer ${window.token}` }\n});\n\nconst client = new ApolloClient({\n    cache: cache,\n    link: link,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client}>\n        <ApolloHooksProvider client={client}>\n            <App />\n        </ApolloHooksProvider>\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}